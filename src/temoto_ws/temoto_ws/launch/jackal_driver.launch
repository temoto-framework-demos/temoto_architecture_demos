<launch>
  <node pkg="jackal_base" type="jackal_node" name="jackal_node" required="true">
    <rosparam>
      # TODO: Specify these in code rather than here.
      require:
        publishers:
          - status
          - feedback
          - imu/data_raw
          - navsat/nmea_sentence
        subscribers:
          - cmd_drive
          - wifi_connected
    </rosparam>
    <param name="wireless_interface" value="$(optenv JACKAL_WIRELESS_INTERFACE wlp2s0)" />
    <remap from="/imu/data_raw" to="imu/data_raw"/>
    <remap from="/navsat/nmea_sentence" to="navsat/nmea_sentence"/>
    <remap from="/diagnostics" to="diagnostics"/>
    <!--remap from="jackal_velocity_controller/odom" to="odom"/-->
    <!--remap from="jackal_velocity_controller/cmd_vel" to="cmd_vel"/-->
  </node>

  <!-- TODO: Eliminate this by compiling the necessary message definitions into jackal_base. -->
  <node pkg="rosserial_python" type="message_info_service.py" name="rosserial_message_info" />

  <!-- Translate Sentence messages from the MCU to NavSatFix messages -->
  <node pkg="nmea_navsat_driver" type="nmea_topic_driver" name="nmea_topic_driver" ns="navsat" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter">
    <!-- This environment variable is populated by an env hook in the jackal_base
         package. It looks for a user-generated mag config (eg, from running
         the calibrate_compass script), and falls back on a default one. -->
    <rosparam file="$(env JACKAL_MAG_CONFIG)" />
    <rosparam>
      gain: 0.1
      zeta: 0.001
      publish_tf: false
    </rosparam>
  </node>

  <!-- Differential controller and basic localization -->
  <include file="$(find jackal_control)/launch/control.launch" />

  <!-- Teleoperation via joystick and rviz interactive markers -->
  <include file="$(find jackal_control)/launch/teleop.launch" />

  <!-- Diagnostic Aggregator for robot monitor usage -->
  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator">
    <rosparam command="load" file="$(find jackal_base)/config/diagnostic_analyzers.yaml" />
  </node>

</launch>
